. Love Nines
You are given a number N from 1 to 109.

 

You want to form the number N as a sum of positive numbers ending with 9. For example: 28 = 19 + 9. 

 

Find the minimum number of summands (terms ending with 9) to achieve the task. Print -1 if impossible.

 

Input:

 

The first line of input contains a single integer T, denoting the number of testcases.


The next T lines contain a single integer N each.

 

Output:

 

Print the minimum number of summands required to get N, or print -1 if impossible.

 

Constraints:

1 <= T <= 100

1 <= N <= 109

 

Sample Input

3
7
209
27

Sample Output

-1
1
3

Sample Explanation

- It is impossible to form 7 using positive integers ending with 9

- 209 itself ends with 9, so it can be used as a solo term

- 27 = 9 + 9 + 9, so minimum number of terms required is 3.

/*2*/
2. BIT Land
BIT LAND is a unique and beautiful place. It's an awesome Coding hub but recently it's being haunted by a monster named Dumit. Dumit is an evil creature who is hell-bent on destroying the coding culture of BIT Land. The Executive body of BIT Land is forced to cater to his needs in order to save the coding culture of BIT Land. Recently he gave a task and threatened the Executive body if it's not finished in stipulated time.

 

Dumit gave a number S of length N. The task is to convert that number into an even number. 

 

An even number is a  number consisting of digits from 0-9 where the frequency of each digit must be a multiple of 2. Number in BIT LAND can start with 0.

 

You can remove any number of digits from the original number. You have to remove digits in such a manner that you obtain an even string of largest length and the difference between the index of first and last digit removed should be minimum possible.

 

print the minimum possible difference. In case it's impossible to create an even number or If the removal of digits is not required, print -1

 

Input:

 

The first line of input contains a single integer N, the size of the given number

The Second line of input contains the number S

 

Output:

 

print the minimum possible difference if the answer exists, otherwise print -1

 

Constraints:

 

1 <= N <= 100000

0 <= S[i] <= 9

 

Sample Input

 

5

12111

 

Sample Output

 

0

 

Sample Input

 

4

2113

 

Sample Output

 

3

 

Explanation:

 

First Test Case: you only need to remove digit "2" present at 1st index.
Second Test Case: you need to remove digits "2" and "3" to make the number even.
 

 /*3*/
 3. Taker Tree
Everyone knows that UnderTaker is a legendary wrestler but did you know that he's also an environmentalist. Recently He planted a tree and just like him, his planted tree showed some strange characteristics. 

 

This unique tree was named as "TAKER TREE".  A TAKER TREE of size N is a Tree consisting of N+1 nodes where nodes are labeled from 0 to N. In TAKER TREE, parent of a node with label X  is a node we obtain by removing the last set bit from the value X.

For e.g.- parent of node labeled as 1 is 0, the parent of node labeled 3 is 2 and so on.

 

you are given Q queries and in each query you are given a single Integer N which denotes that you have a TAKER TREE of size N. For each query you need to print the maximum distance that exists between any 2 nodes in TAKER TREE of size N.

 

 

Input:

 

The First Line of Input Contains a single integer Q, the number of queries

Next Q Line contains a Single Integer N, denoting the size of TAKER TREE

 

Output:

 

for each query, print the maximum distance that exists between 2 nodes.

 

Constraints:

 

1 <= Q <= 100000

 

for 20% Score:

 

1 <= N <= 10000

 

for 80% Score:

 

1 <= N <= 100000000

 

Sample Input

 

2

2

3

 

Sample Output

 

2

3

 

Explanation

 

In the first Query, the maximum distance exists between Node label 1 and Node label 2.
In the second Query, the maximum distance exists between Node label 1 and Node label 3.
 
 /*4*/
 4. Too much difference
You are given an array of N numbers. 

 

For every element in the array, you can perform the following operations any number of times:
-If the number is divisible be K, divide it by K
-If the number is not divisible by K, multiply it by K

 

Find the minimum possible difference between the maximum and the minimum element in the resulting array

 

Input:

 

The first line contains a single integer T, denoting the number of testcases.

 

For every testcase, the first line contains integers N and K.


The next line contains N integers, ith integer being Ai, corresponding to the elements in the array.

 

Output:

 

For every testcase, print the minimum possible difference between the maximum and the minimum element in the resulting array, on a new line.

 

Constraints:

 

1 <= T <= 20
1 <= N <= 104
1 <= Ai <= 109
2 <= K <= 100

 

Sample Input

3
5 5
82 79 38 49 9 
5 9
47 37 75 93 89 
5 2
120 160 176 172 192 
 

Sample Output

44
56
18

 

Sample Explanation

- For the first testcase, it is impossible to divide any number by 5, and the most optimal solution would be to multiply the last number by 5, to get: [82, 79, 38, 49, 45]

- For the second testcase, not changing the array gives the optimal answer

- The most optimal array after performing a sequence of operations would be: [30, 40, 44, 43, 48]

/*5*/
5. Online Sum Trouble
You are given Q queries that you want to answer. These queries are of two types:
 

Type 1 - X Y: Replace the value of element X with Y (initial value of every element is 0)

Type 2 - X: Find summation of values stores in all elements <= X. 

 

Here, the queries have to be processed online (check input section for clarification).

 

Input:

 

The first line of input contains 3 integers Q, M1, M2. 
The next Q lines are of the following type:

1 A B

or

2 A

 

Where, for every query: X = (A + Previous Answer) % M1 + 1, Y = (B + Previous Answer) % M2 + 1. Previous Answer is 0 initially, and is replaced by the answer for the Type 2 query, whenever encountered.

 

Output:

 

For every query of Type 2, print the answer in a new line.

 

Constraints:

 

1 <= Q <= 2 * 105

2 <= M1 <= 1018

2 <= M2 <= 109

1 <= A <= M1

1 <= B  <= M2

 

For 50% testcases:

1 <= Q <= 105

2 <= M1 <= 109

2 <= M2 <= 109

1 <= A <= M1

1 <= B  <= M2

 

Sample Input

10 10 10 
2 6
1 1 4
2 6
1 1 4
2 2
1 5 10
2 6
1 4 8
2 5
1 6 10
 

 

Sample Output

0
5
15
11
31

 

Sample Explanation

The actual queries turn out to be:

2 7
1 2 5
2 7
1 7 10
2 8
1 1 6
2 2
1 6 10
2 7
1 8 2

/*6*/
6. Shady Strings
Slim Shady a.k.a Eminem really likes to create amazing lyrics and bars. He's looking for a new pair of words to include in his rhymes. In short, he's looking for a pair of Shady String.

 

A Shady String is a palindromic string of odd length. Em has a string S and he is looking for such a pair of shady strings that are non-overlapping and exists in string S. he also wants to find such a shady string pair whose product of lengths give the maximum possible value. 

 

Since Slim is busy in making a combination of "Kamikaze and Gandhi", he's looking for a coder who is "not afraid" to take up this challenge. let's help Em to create new rhymes so that you can once again "lose yourself" in his music.

 

Input:

The first line of input contains a string S, the shady string

 

Output:

Print the maximum value of the product of shady strings.

 

Constraints:

2 <= |S| <= 100000

 

Sample Input

 

aaa

 

Sample Output

 

1

 

Sample Input

 

ababb

 

Sample Output

 

3

 

Explanation:

 

 First Test Case: Maximum product is obtained using "aaa" and "a"
 Second Test Case: Maximum product is obtained using "aba" and "b", "bab" and "a" or "bab" and "b"